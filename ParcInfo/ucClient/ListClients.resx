<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAwZJREFUWEftl8tPE1EUxpHEjXGt8W+QuGGpCZFpgXYKWGamVAEBeaU8BERADYpI
        5BFFBUQUAyFERAmKRjFCUAwEiaBh4QNiNGDEQjSCUJ6l9Hju7cXBDCA2sCDpL7mL3jnzfV/n0XPq5mLT
        4m007lRpxasqjT6SbW08np6x2ziNmMPx4qCKF4GsiNikGbvdHs1KNgR3TifGc9qgd2hoJ6Y+Ogniko7D
        0+ZnsAiGsOJqn5+f59WaoL1kZWdnuzON/8dHF3RApRVeoqGNmKpxhUXFQ+3dBkATZivz6fMAVFTVwMHw
        OHplyPILNA6jRqG3v7CHya6OF2/wwG/bhCfPUhGdCGJINJRer4Rxi4VZyZiHR+BWXQNEmVKoIa8/BLkF
        l6Czqxuev+iArJx8DBG8GKYfb91JX1/9LmanBNP+IMWB0mHIu3AFzOYRZiUzOvYL7j9sgqS0U1TYx98A
        mVm50NzaBlNT06xK5uuQGUzJGX+uiooXWpidEk4rjAdIYexUGavVSg2IETEkQompJ2iQn6NjrEpmdm5O
        cQViE9LAEBYD6NHB7JSsFODeg8dUBJ94qKmth6FvZnZEZmFhAbpf90JBUQn4C6G0PiTSBJXVtTAw+IXW
        pKRnORegrr6RCi5HX/9HKLtRhc9KFK3RGyOguKwC3r7vI28Gq3Kw7gGKSsrpPnn4zhdehq5XPfiG2NhR
        JU4HaGvvhJiEY+yTDBEk93Z6ZobtrI7TAVaCCJK1VlwBXAFcAVwB/hkAW+V38tMaYAiH/IvFy7bjpawl
        wMSEBR49aYHUzDOgxkmK04pNzE7Jfl9h918DCS5DaAyU36wGy+Qkk5RZKQBpx+Tn+/S5AjKIUB2/AOMH
        b17MUKv1O5jd6ihGMpyOwqMT4U5DI9hsjoazNABpxz1veqGwqJS0Yzo7agKNZtTIU/N6DybrFMqhFIcS
        U3I6hB4xQWTcUdqOJdaO8RtP4H2+ptJJ+/DcLQ6JdWK5sdwRKHgO925zGkGHNVtZ+cay+McETc96SdJ2
        tu1is+Hm9hvz1tBJw574OQAAAABJRU5ErkJggg==
</value>
  </data>
</root>